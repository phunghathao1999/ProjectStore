// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LaptopStore.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20201219013001_StoreMigration")]
    partial class StoreMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ApplicationCore.Entity.Catelog", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("catelogName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Catelog");

                    b.HasData(
                        new
                        {
                            id = 1,
                            catelogName = "Laptop"
                        },
                        new
                        {
                            id = 2,
                            catelogName = "Bàn phím"
                        },
                        new
                        {
                            id = 3,
                            catelogName = "Chuột"
                        },
                        new
                        {
                            id = 4,
                            catelogName = "Tai nghe"
                        },
                        new
                        {
                            id = 5,
                            catelogName = "Loa"
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entity.Combo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("comboName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("endDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("priceSale")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("productList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("startDate")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Combo");

                    b.HasData(
                        new
                        {
                            id = 1,
                            comboName = "Giảm giá Giáng Sinh",
                            endDate = new DateTime(2021, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 20000000m,
                            priceSale = 15000000m,
                            productList = "1;3;5;7",
                            startDate = new DateTime(2020, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entity.Invoice", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("customerAddesss")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("customerID")
                        .HasColumnType("int");

                    b.Property<string>("customerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("phone")
                        .HasColumnType("int");

                    b.Property<DateTime?>("shipDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("shipperID")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("totalMoney")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("customerID");

                    b.HasIndex("shipperID");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("ApplicationCore.Entity.InvoiceDetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.Property<int?>("comboID")
                        .HasColumnType("int");

                    b.Property<int>("invoiceID")
                        .HasColumnType("int");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("productID")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("comboID");

                    b.HasIndex("invoiceID");

                    b.HasIndex("productID");

                    b.ToTable("InvoiceDetail");
                });

            modelBuilder.Entity("ApplicationCore.Entity.People", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("birthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("phone")
                        .HasColumnType("int");

                    b.Property<DateTime>("registraDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("role_ID")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("role_ID");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            id = 1,
                            address = "273 An Duong vuong, Quan 5, TP.Ho Chi Minh",
                            birthDate = new DateTime(2000, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            gender = "Nam",
                            name = "Nguyen van A",
                            password = "f8b1688fccda97a9750c65fe0baed7e2",
                            phone = 123456789,
                            registraDate = new DateTime(2020, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            role_ID = 1,
                            username = "phunghathao1@gmail.com"
                        },
                        new
                        {
                            id = 2,
                            address = "273 An Duong vuong, Quan 5, TP.Ho Chi Minh",
                            birthDate = new DateTime(2000, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            gender = "Nam",
                            name = "Nguyen van B",
                            password = "f8b1688fccda97a9750c65fe0baed7e2",
                            phone = 123456789,
                            registraDate = new DateTime(2020, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            role_ID = 2,
                            username = "phunghathao2@gmail.com"
                        },
                        new
                        {
                            id = 3,
                            address = "273 An Duong vuong, Quan 5, TP.Ho Chi Minh",
                            birthDate = new DateTime(2000, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            gender = "Nam",
                            name = "Nguyen van C",
                            password = "f8b1688fccda97a9750c65fe0baed7e2",
                            phone = 123456789,
                            registraDate = new DateTime(2020, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            role_ID = 3,
                            username = "phunghathao3@gmail.com"
                        },
                        new
                        {
                            id = 4,
                            address = "273 An Duong vuong, Quan 5, TP.Ho Chi Minh",
                            birthDate = new DateTime(2000, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            gender = "Nam",
                            name = "Nguyen van D",
                            password = "f8b1688fccda97a9750c65fe0baed7e2",
                            phone = 123456789,
                            registraDate = new DateTime(2020, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            role_ID = 4,
                            username = "phunghathao4@gmail.com"
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entity.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("amount")
                        .HasColumnType("int");

                    b.Property<int>("catelogID")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("imgLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("priceSale")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("productDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("productName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("sale")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("catelogID");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            id = 1,
                            amount = 10,
                            catelogID = 1,
                            createdDate = new DateTime(2020, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 13690000m,
                            priceSale = 13000000m,
                            productDetail = "CPU: Intel Core i3 Ice Lake, 1005G1, 1.20 GHz;RAM: 8 GB, DDR4 (On board 4GB +1 khe 4GB), 2400 MHz;Ổ cứng: SSD 512 GB M.2 PCIe, Hỗ trợ khe cắm HDD SATA;Màn hình: 15.6 inch, Full HD (1920 x 1080);Card màn hình: Card đồ họa tích hợp, Intel UHD Graphics;Cổng kết nối: 2 x USB 2.0, USB 3.1, HDMI, LAN (RJ45);Hệ điều hành: Windows 10 Home SL;Thiết kế: Vỏ nhựa, PIN liền;Kích thước: Dày 19.9 mm, 1.7 kg",
                            productName = "Laptop Acer Aspire 3 A315 56 36YS i3 1005G1 (NX.HS5SV.008)"
                        },
                        new
                        {
                            id = 2,
                            amount = 7,
                            catelogID = 1,
                            createdDate = new DateTime(2020, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 28990000m,
                            priceSale = 28990000m,
                            productDetail = "CPU: Intel Core i3 Ice Lake, 1005G1, 1.20 GHz;RAM: 8 GB, DDR4 (On board 4GB +1 khe 4GB), 2400 MHz; Ổ cứng: SSD 512 GB M.2 PCIe, Hỗ trợ khe cắm HDD SATA;Màn hình: 15.6 inch, Full HD (1920 x 1080);Card màn hình: Card đồ họa tích hợp, Intel UHD Graphics;Cổng kết nối: 2 x USB 2.0, USB 3.1, HDMI, LAN (RJ45);Hệ điều hành: Windows 10 Home SL;Thiết kế: Vỏ nhựa, PIN liền;Kích thước: Dày 19.9 mm, 1.7 kg",
                            productName = "Laptop Asus Gaming Rog Strix G512 i7 10750H/144Hz (IAL001T)"
                        },
                        new
                        {
                            id = 3,
                            amount = 7,
                            catelogID = 2,
                            createdDate = new DateTime(2020, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 790000m,
                            productDetail = "CPU: Intel Core i3 Ice Lake, 1005G1, 1.20 GHz;RAM: 8 GB, DDR4 (On board 4GB +1 khe 4GB), 2400 MHz; Ổ cứng: SSD 512 GB M.2 PCIe, Hỗ trợ khe cắm HDD SATA;Màn hình: 15.6 inch, Full HD (1920 x 1080);Card màn hình: Card đồ họa tích hợp, Intel UHD Graphics;Cổng kết nối: 2 x USB 2.0, USB 3.1, HDMI, LAN (RJ45);Hệ điều hành: Windows 10 Home SL;Thiết kế: Vỏ nhựa, PIN liền;Kích thước: Dày 19.9 mm, 1.7 kg",
                            productName = "Bàn phím Newmen GM368"
                        },
                        new
                        {
                            id = 4,
                            amount = 7,
                            catelogID = 2,
                            createdDate = new DateTime(2020, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 690000m,
                            productDetail = "CPU: Intel Core i3 Ice Lake, 1005G1, 1.20 GHz;RAM: 8 GB, DDR4 (On board 4GB +1 khe 4GB), 2400 MHz; Ổ cứng: SSD 512 GB M.2 PCIe, Hỗ trợ khe cắm HDD SATA;Màn hình: 15.6 inch, Full HD (1920 x 1080);Card màn hình: Card đồ họa tích hợp, Intel UHD Graphics;Cổng kết nối: 2 x USB 2.0, USB 3.1, HDMI, LAN (RJ45);Hệ điều hành: Windows 10 Home SL;Thiết kế: Vỏ nhựa, PIN liền;Kích thước: Dày 19.9 mm, 1.7 kg",
                            productName = "Bàn phím E-Dra EK311"
                        },
                        new
                        {
                            id = 5,
                            amount = 7,
                            catelogID = 3,
                            createdDate = new DateTime(2020, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 290000m,
                            productDetail = "CPU: Intel Core i3 Ice Lake, 1005G1, 1.20 GHz;RAM: 8 GB, DDR4 (On board 4GB +1 khe 4GB), 2400 MHz; Ổ cứng: SSD 512 GB M.2 PCIe, Hỗ trợ khe cắm HDD SATA;Màn hình: 15.6 inch, Full HD (1920 x 1080);Card màn hình: Card đồ họa tích hợp, Intel UHD Graphics;Cổng kết nối: 2 x USB 2.0, USB 3.1, HDMI, LAN (RJ45);Hệ điều hành: Windows 10 Home SL;Thiết kế: Vỏ nhựa, PIN liền;Kích thước: Dày 19.9 mm, 1.7 kg",
                            productName = "Chuột Gaming Zadez G151M Đen"
                        },
                        new
                        {
                            id = 6,
                            amount = 7,
                            catelogID = 3,
                            createdDate = new DateTime(2020, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 290000m,
                            productDetail = "CPU: Intel Core i3 Ice Lake, 1005G1, 1.20 GHz;RAM: 8 GB, DDR4 (On board 4GB +1 khe 4GB), 2400 MHz; Ổ cứng: SSD 512 GB M.2 PCIe, Hỗ trợ khe cắm HDD SATA;Màn hình: 15.6 inch, Full HD (1920 x 1080);Card màn hình: Card đồ họa tích hợp, Intel UHD Graphics;Cổng kết nối: 2 x USB 2.0, USB 3.1, HDMI, LAN (RJ45);Hệ điều hành: Windows 10 Home SL;Thiết kế: Vỏ nhựa, PIN liền;Kích thước: Dày 19.9 mm, 1.7 kg",
                            productName = "Chuột không dây Zadez M353 Xám"
                        },
                        new
                        {
                            id = 7,
                            amount = 7,
                            catelogID = 4,
                            createdDate = new DateTime(2020, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 790000m,
                            productDetail = "CPU: Intel Core i3 Ice Lake, 1005G1, 1.20 GHz;RAM: 8 GB, DDR4 (On board 4GB +1 khe 4GB), 2400 MHz; Ổ cứng: SSD 512 GB M.2 PCIe, Hỗ trợ khe cắm HDD SATA;Màn hình: 15.6 inch, Full HD (1920 x 1080);Card màn hình: Card đồ họa tích hợp, Intel UHD Graphics;Cổng kết nối: 2 x USB 2.0, USB 3.1, HDMI, LAN (RJ45);Hệ điều hành: Windows 10 Home SL;Thiết kế: Vỏ nhựa, PIN liền;Kích thước: Dày 19.9 mm, 1.7 kg",
                            productName = "Tai nghe Bluetooth True Wireless Mozard Air 3 Đen"
                        },
                        new
                        {
                            id = 8,
                            amount = 7,
                            catelogID = 4,
                            createdDate = new DateTime(2020, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 3790000m,
                            productDetail = "CPU: Intel Core i3 Ice Lake, 1005G1, 1.20 GHz;RAM: 8 GB, DDR4 (On board 4GB +1 khe 4GB), 2400 MHz; Ổ cứng: SSD 512 GB M.2 PCIe, Hỗ trợ khe cắm HDD SATA;Màn hình: 15.6 inch, Full HD (1920 x 1080);Card màn hình: Card đồ họa tích hợp, Intel UHD Graphics;Cổng kết nối: 2 x USB 2.0, USB 3.1, HDMI, LAN (RJ45);Hệ điều hành: Windows 10 Home SL;Thiết kế: Vỏ nhựa, PIN liền;Kích thước: Dày 19.9 mm, 1.7 kg",
                            productName = "Tai nghe Bluetooth True Wireless Jabra Elite Active 65T Xanh Cooper"
                        },
                        new
                        {
                            id = 9,
                            amount = 7,
                            catelogID = 5,
                            createdDate = new DateTime(2020, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 3390000m,
                            productDetail = "CPU: Intel Core i3 Ice Lake, 1005G1, 1.20 GHz;RAM: 8 GB, DDR4 (On board 4GB +1 khe 4GB), 2400 MHz; Ổ cứng: SSD 512 GB M.2 PCIe, Hỗ trợ khe cắm HDD SATA;Màn hình: 15.6 inch, Full HD (1920 x 1080);Card màn hình: Card đồ họa tích hợp, Intel UHD Graphics;Cổng kết nối: 2 x USB 2.0, USB 3.1, HDMI, LAN (RJ45);Hệ điều hành: Windows 10 Home SL;Thiết kế: Vỏ nhựa, PIN liền;Kích thước: Dày 19.9 mm, 1.7 kg",
                            productName = "Loa Bluetooth LG Xboom Go PL7 Xanh Đen"
                        },
                        new
                        {
                            id = 10,
                            amount = 7,
                            catelogID = 5,
                            createdDate = new DateTime(2020, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            price = 2952000m,
                            productDetail = "CPU: Intel Core i3 Ice Lake, 1005G1, 1.20 GHz;RAM: 8 GB, DDR4 (On board 4GB +1 khe 4GB), 2400 MHz; Ổ cứng: SSD 512 GB M.2 PCIe, Hỗ trợ khe cắm HDD SATA;Màn hình: 15.6 inch, Full HD (1920 x 1080);Card màn hình: Card đồ họa tích hợp, Intel UHD Graphics;Cổng kết nối: 2 x USB 2.0, USB 3.1, HDMI, LAN (RJ45);Hệ điều hành: Windows 10 Home SL;Thiết kế: Vỏ nhựa, PIN liền;Kích thước: Dày 19.9 mm, 1.7 kg",
                            productName = "Loa Bluetooth JBL PULSE2BLKAS Đen"
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entity.Role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("roleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            id = 1,
                            roleName = "Quản lý"
                        },
                        new
                        {
                            id = 2,
                            roleName = "Nhân viên"
                        },
                        new
                        {
                            id = 3,
                            roleName = "Giao hàng"
                        },
                        new
                        {
                            id = 4,
                            roleName = "Khách hàng"
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entity.Invoice", b =>
                {
                    b.HasOne("ApplicationCore.Entity.People", "Customer")
                        .WithMany("InvoiceCustomer")
                        .HasForeignKey("customerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationCore.Entity.People", "Shipper")
                        .WithMany("InvoiceShipper")
                        .HasForeignKey("shipperID");

                    b.Navigation("Customer");

                    b.Navigation("Shipper");
                });

            modelBuilder.Entity("ApplicationCore.Entity.InvoiceDetail", b =>
                {
                    b.HasOne("ApplicationCore.Entity.Combo", "Combo")
                        .WithMany("InvoiceDetail")
                        .HasForeignKey("comboID");

                    b.HasOne("ApplicationCore.Entity.Invoice", "Invoice")
                        .WithMany("InvoiceDetail")
                        .HasForeignKey("invoiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationCore.Entity.Product", "Product")
                        .WithMany("InvoiceDetail")
                        .HasForeignKey("productID");

                    b.Navigation("Combo");

                    b.Navigation("Invoice");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ApplicationCore.Entity.People", b =>
                {
                    b.HasOne("ApplicationCore.Entity.Role", "Role")
                        .WithMany("People")
                        .HasForeignKey("role_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ApplicationCore.Entity.Product", b =>
                {
                    b.HasOne("ApplicationCore.Entity.Catelog", "Catelog")
                        .WithMany("Product")
                        .HasForeignKey("catelogID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catelog");
                });

            modelBuilder.Entity("ApplicationCore.Entity.Catelog", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("ApplicationCore.Entity.Combo", b =>
                {
                    b.Navigation("InvoiceDetail");
                });

            modelBuilder.Entity("ApplicationCore.Entity.Invoice", b =>
                {
                    b.Navigation("InvoiceDetail");
                });

            modelBuilder.Entity("ApplicationCore.Entity.People", b =>
                {
                    b.Navigation("InvoiceCustomer");

                    b.Navigation("InvoiceShipper");
                });

            modelBuilder.Entity("ApplicationCore.Entity.Product", b =>
                {
                    b.Navigation("InvoiceDetail");
                });

            modelBuilder.Entity("ApplicationCore.Entity.Role", b =>
                {
                    b.Navigation("People");
                });
#pragma warning restore 612, 618
        }
    }
}
